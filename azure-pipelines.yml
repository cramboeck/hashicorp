# Azure DevOps Pipeline for AVD Image Build and Infrastructure Deployment
# Securely uses Azure Key Vault for secrets, no pkrvars.json file needed

trigger:
  branches:
    include:
      - main

schedules:
- cron: "0 3 1 * *"  # jeden 1. Tag im Monat um 03:00 Uhr UTC
  displayName: 'Monthly AVD Image Build'
  branches:
    include:
      - main
  always: true

variables:
- group: packer-secrets  # Variablen aus Key Vault verknÃ¼pfter Variable Group

stages:
- stage: Init
  displayName: 'Set fixed variables'
  jobs:
  - job: InitVars
    displayName: 'Set static image version'
    pool:
      name: 'AVD-packer'
    steps:
    - script: |
        echo "##vso[task.setvariable variable=date_tag]2025.05.24"
      displayName: 'Set fixed date_tag variable'

- stage: BuildAVDImage
  displayName: 'Build AVD Base Image with Packer'
  dependsOn: Init
  jobs:
  - job: BuildImage
    displayName: 'Execute Packer Build'
    pool:
      name: 'AVD-packer'
    steps:
    - checkout: self

    - script: |
        echo "Authenticating with Azure..."
        az login --service-principal \
          -u "$(client-id)" \
          -p "$(client-secret)" \
          --tenant "$(tenant-id)" > /dev/null
        az account show
      displayName: 'Azure CLI Login'

    - script: |
        echo "##[group]System Diagnostics"
        df -h
        free -m
        az account show
        echo "Image versions available in SIG:"
        az sig image-version list \
          --gallery-name avd_sig \
          --gallery-image-definition avd-goldenimage \
          --resource-group ramboeck-test-westeurope-rg \
          --query "[].name" -o table
        echo "##[endgroup]"
      displayName: 'System Diagnostics'

    - task: PowerShell@2
      displayName: 'Validate Packer Template'
      inputs:
        targetType: 'inline'
        pwsh: true
        script: |
          Set-Location "$(Build.SourcesDirectory)/01-base-packer"

          Write-Host "##[group]Packer Validate"
          packer validate `
            -var "client_id=$(client-id)" `
            -var "client_secret=$(client-secret)" `
            -var "tenant_id=$(tenant-id)" `
            -var "subscription_id=$(subscription-id)" `
            -var "location=$(location)" `
            -var "sig_rg_name=$(sig_rg_name)" `
            -var "sig_name=$(sig_name)" `
            -var "sig_image_name=$(sig_image_name)" `
            -var "sig_image_version=$(date_tag)" `
            -var "publisher=$(publisher)" `
            -var "offer=$(offer)" `
            -var "sku=$(sku)" `
            -var "winrm_password=$(winrm_password)" `
            avd-base-image.pkr.hcl
          Write-Host "##[endgroup]"

    - task: PowerShell@2
      displayName: 'Run Packer Build'
      inputs:
        targetType: 'inline'
        pwsh: true
        script: |
          Set-Location "$(Build.SourcesDirectory)/01-base-packer"

          Write-Host "##[group]Packer Init"
          packer init avd-base-image.pkr.hcl
          Write-Host "##[endgroup]"

          Write-Host "##[group]Packer Build with Logging"
          packer build -color=true -on-error=abort `
            -var "client_id=$(client-id)" `
            -var "client_secret=$(client-secret)" `
            -var "tenant_id=$(tenant-id)" `
            -var "subscription_id=$(subscription-id)" `
            -var "location=$(location)" `
            -var "sig_rg_name=$(sig_rg_name)" `
            -var "sig_name=$(sig_name)" `
            -var "sig_image_name=$(sig_image_name)" `
            -var "sig_image_version=$(date_tag)" `
            -var "publisher=$(publisher)" `
            -var "offer=$(offer)" `
            -var "sku=$(sku)" `
            -var "winrm_password=$(winrm_password)" `
            avd-base-image.pkr.hcl | Tee-Object -FilePath "packer.log"
          Write-Host "##[endgroup]"

    - script: |
        echo "Logging out of Azure session"
        az logout || true
      displayName: 'Azure Logout (post-build)'

    - task: PublishBuildArtifacts@1
      condition: ne(variables['skip_build'], 'true')
      displayName: 'Publish Packer Log Output'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/01-base-packer/packer.log'
        ArtifactName: 'packer-logs'
        publishLocation: 'Container'
