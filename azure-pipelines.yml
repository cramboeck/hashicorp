# Azure DevOps Pipeline for AVD Image Build and Infrastructure Deployment
# Securely uses Azure Key Vault for secrets, streamlined using native script tasks

trigger:
  branches:
    include:
      - main

schedules:
- cron: "0 3 1 * *"  # jeden 1. Tag im Monat um 03:00 Uhr UTC
  displayName: 'Monthly AVD Image Build'
  branches:
    include:
      - main
  always: true

variables:
- group: packer-secrets  # Variablen aus Key Vault verknÃ¼pfter Variable Group

stages:
- stage: BuildAVDImage
  displayName: 'Build AVD Base Image with Packer'
  jobs:
  - job: BuildImage
    displayName: 'Execute Packer Build'
    pool:
      name: 'AVD-packer'
    steps:
    - checkout: self

    - script: |
        echo "Authenticating with Azure..."
        az login --service-principal \
          -u "$(client-id)" \
          -p "$(client-secret)" \
          --tenant "$(tenant-id)" > /dev/null
        az account show
      displayName: 'Azure CLI Login'

    - script: |
        echo "##[group]System Diagnostics"
        df -h
        free -m
        az account show
        echo "Image versions available in SIG:"
        az sig image-version list \
          --gallery-name avd_sig \
          --gallery-image-definition avd-goldenimage \
          --resource-group ramboeck-test-westeurope-rg \
          --query "[].name" -o table
        echo "##[endgroup]"
      displayName: 'System Diagnostics'

    - script: |
        echo "##[group]Packer Validate"
        packer validate \
          -var "client_id=$(client-id)" \
          -var "client_secret=$(client-secret)" \
          -var "tenant_id=$(tenant-id)" \
          -var "subscription_id=$(subscription-id)" \
          -var "winrm_password=$(winrm_password)" \
          -var-file=variables.pkrvars.hcl \
          avd-base-image.pkr.hcl
        echo "##[endgroup]"
      workingDirectory: '$(Build.SourcesDirectory)/01-base-packer'
      displayName: 'Validate Packer Template'

    - script: |
        echo "##[group]Packer Init"
        packer init avd-base-image.pkr.hcl
        echo "##[endgroup]"

        echo "##[group]Packer Build with Logging"
        packer build -color=true -on-error=abort \
          -var "client_id=$(client-id)" \
          -var "client_secret=$(client-secret)" \
          -var "tenant_id=$(tenant-id)" \
          -var "subscription_id=$(subscription-id)" \
          -var "winrm_password=$(winrm_password)" \
          -var-file=variables.pkr.hcl \
          avd-base-image.pkr.hcl | tee packer.log
        echo "##[endgroup]"
      workingDirectory: '$(Build.SourcesDirectory)/01-base-packer'
      displayName: 'Run Packer Build'

    - script: |
        echo "Logging out of Azure session"
        az logout || true
      displayName: 'Azure Logout (post-build)'

    - task: PublishBuildArtifacts@1
      condition: ne(variables['skip_build'], 'true')
      displayName: 'Publish Packer Log Output'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/01-base-packer/packer.log'
        ArtifactName: 'packer-logs'
        publishLocation: 'Container'
