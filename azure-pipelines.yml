# Azure DevOps Pipeline for AVD Image Build and Infrastructure Deployment
# Securely uses Azure Key Vault for secrets

trigger:
  branches:
    include:
      - main

schedules:
- cron: "0 3 1 * *"  # jeden 1. Tag im Monat um 03:00 Uhr UTC
  displayName: 'Monthly AVD Image Build'
  branches:
    include:
      - main
  always: true

variables:
- group: packer-secrets  # Variablen aus Key Vault verkn√ºpfter Variable Group

stages:
- stage: BuildAVDImage
  displayName: 'Build AVD Base Image with Packer'
  jobs:
  - job: BuildImage
    displayName: 'Execute Packer Build'
    pool:
      name: 'Azure Pipelines'
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - task: PowerShell@2
      displayName: 'Install Packer via Chocolatey'
      inputs:
        targetType: 'inline'
        script: |
          choco install packer -y

    - task: PowerShell@2
      displayName: 'Validate Packer Template'
      inputs:
        targetType: 'inline'
        script: |
          echo "##[group]Packer Validate"
          packer validate -var-file="packer.auto.pkrvars.json" .
          echo "##[endgroup]"

    - task: PowerShell@2
      displayName: 'Run Packer Build'
      env:
        PKR_VAR_client_id: $(client-id)
        PKR_VAR_client_secret: $(client-secret)
        PKR_VAR_tenant_id: $(tenant-id)
        PKR_VAR_subscription_id: $(subscription-id)
        PKR_VAR_winrm_password: $(winrm-password)
        PKR_VAR_sig_rg_name: 'shared-image-gallery-rg'
        PKR_VAR_sig_image_name: 'avd-golden'
        PKR_VAR_sig_image_version: '2025.05.24'
      inputs:
        targetType: 'inline'
        script: |
          echo "##[group]Packer Init"
          packer init .
          echo "##[endgroup]"

          echo "##[group]Packer Build with Logging"
          packer build -color=true -on-error=abort -var-file="packer.auto.pkrvars.json" . | Tee-Object -FilePath "packer.log"
          echo "##[endgroup]"

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Packer Log Output'
      inputs:
        PathtoPublish: 'packer.log'
        ArtifactName: 'packer-logs'
        publishLocation: 'Container'

- stage: DeployInfrastructure
  displayName: 'Deploy AVD Infrastructure with Terraform'
  dependsOn: BuildAVDImage
  condition: succeeded()
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    pool:
      name: 'Azure Pipelines'
    steps:
    - checkout: self

    - script: |
        curl -sLo terraform.zip https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/
      displayName: 'Install Terraform CLI'

    - script: |
        cd 00-avd-terraform
        terraform init
        terraform apply -auto-approve
      env:
        ARM_CLIENT_ID: $(client-id)
        ARM_CLIENT_SECRET: $(client-secret)
        ARM_SUBSCRIPTION_ID: $(subscription-id)
        ARM_TENANT_ID: $(tenant-id)
      displayName: 'Run Terraform Apply'
